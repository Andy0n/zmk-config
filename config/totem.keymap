// #include <behaviors.dtsi>
// #include <dt-bindings/zmk/keys.h>
// #include "zmk-helpers/helper.h"           // Requires zmk-helpers module.
// #include "zmk-helpers/key-labels/totem.h" // Requires zmk-helpers module.
// // Wireless:
// // #include <dt-bindings/zmk/bt.h>
// // #include <dt-bindings/zmk/outputs.h>
// #include "keys_de.h"
//
//
// #define BASE        0
// #define NAV         1
// #define SYM         2
// #define FUN         3
// #define GAME        4
// #define MISC        5
//
// #define XXX &none
// #define ___ &trans
//
//
//
// /* Global defaults */
// #define QUICK_TAP_MS 175
//
// &sk {
//   release-after-ms = <900>;
//   quick-release;
// };
//
// &sl { // Allow sticky mods to chord across sticky layers.
//   ignore-modifiers;
// };
//
// &lt {
//   flavor = "balanced";
//   tapping-term-ms = <200>;
//   quick-tap-ms = <QUICK_TAP_MS>;
// };
//
// &mt {
//     flavor = "tap-preferred";
//     tapping-term-ms = <220>;
//     quick-tap-ms = <220>;
//     // global-quick-tap;
//     hold-trigger-key-positions = <0>;
// };
//
//
//
// /* Homerow mods */
// #define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4 LB5 // Left-hand keys.
// #define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4 RB5 // Right-hand keys.
// #define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                         // Thumb keys.
//
// #define MAKE_HRM(NAME, HOLD, TAP, TRIGGER_POS)                                 \
//   ZMK_HOLD_TAP(NAME, bindings = <HOLD>, <TAP>; flavor = "balanced";            \
//                tapping-term-ms = <280>; quick-tap-ms = <QUICK_TAP_MS>;         \
//                require-prior-idle-ms = <150>; hold-trigger-on-release;         \
//                hold-trigger-key-positions = <TRIGGER_POS>;)
//
// MAKE_HRM(hml, &kp, &kp, KEYS_R THUMBS) // Left-hand HRMs.
// MAKE_HRM(hmr, &kp, &kp, KEYS_L THUMBS) // Right-hand HRMs.
//
// // Hack: Make HRM combos tap-only (cf, ZMK issue #544).
// #define ZMK_COMBO_8(NAME, TAP, POS, LAYERS, COMBO_MS, IDLE_MS, HOLD, SIDE)     \
//   MAKE_HRM(hm_combo_##NAME, &kp, TAP, SIDE THUMBS)                             \
//   ZMK_COMBO_6(NAME, &hm_combo_##NAME HOLD 0, POS, LAYERS, COMBO_MS, IDLE_MS)
//
//
//
// /* Keymap */
// #ifndef ZMK_BASE_LAYER
//   #define ZMK_BASE_LAYER(name, LT, RT, LM, RM, LB, RB, LH, RH)                 \
//       ZMK_LAYER(name, LT RT LM RM LB RB LH RH)
// #endif
//
// #define MOD_A &hml LALT DE_A
// #define MOD_S &hml RALT DE_S
// #define MOD_D &hml LGUI DE_D
// #define MOD_F &hml LCTRL DE_F
//
// #define MOD_J &hmr RCTRL DE_J
// #define MOD_K &hmr RGUI DE_K
// #define MOD_L &hmr RALT DE_L
// #define MOD_OE &hmr LALT DE_O_UMLAUT
//
// ZMK_BASE_LAYER(Base,
// //              ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
//                  &kp DE_Q      &kp DE_W      &kp DE_E      &kp DE_R      &kp DE_T     ,  &kp DE_Z      &kp DE_U      &kp DE_I      &kp DE_O      &kp DE_P     ,
// //              ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
//                  MOD_A         MOD_S         MOD_D         MOD_F         &kp DE_G     ,  &kp DE_H      MOD_J         MOD_K         MOD_L         MOD_OE       ,
// //╭─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮
//    &kp ESCAPE    &kp DE_Y      &kp DE_X      &kp DE_C      &kp DE_V      &kp DE_B     ,  &kp DE_N      &kp DE_M      &kp DE_COMMA  &kp DE_DOT    &kp DE_MINUS  &kp DE_A_UMLAUT,
// //╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
//                                              &kp TAB       &lt NAV BSPC  &kp SPACE    ,  &mt RSHFT RET &lt SYM DE_SZ DE_U_UMLAUT
// //                                          ╰─────────────┴─────────────┴─────────────╯ ╰─────────────┴─────────────┴─────────────╯
// )
//
// ZMK_BASE_LAYER(Nav,
// //              ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
//                  ___           ___           &kp UP_ARROW  ___           ___          ,  ___           &kp N7        &kp N8        &kp N9        ___          ,
// //              ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
//                  ___           &kp LEFT      &kp DOWN      &kp RIGHT     ___          ,  ___           &kp N4        &kp N5        &kp N6        ___          ,
// //╭─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮
//    ___           ___           ___           ___           ___           ___          ,  &kp N0        &kp N1        &kp N2        &kp N3        ___           ___          ,
// //╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
//                                              ___           ___           ___          ,  ___           ___           ___
// //                                          ╰─────────────┴─────────────┴─────────────╯ ╰─────────────┴─────────────┴─────────────╯
// )
//
// ZMK_BASE_LAYER(Sym,
// //              ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
//                  &kp DE_CARET  &kp DE_DEG    ___           &kp DE_HASH   &kp DE_EXCL  ,  &kp DE_QMARK  &kp DE_TILDE  &kp DE_STAR   ___           ___          ,
// //              ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
//                  &kp DE_LT     &kp DE_LBKT   &kp DE_LBRC   &kp DE_LPAR   &kp DE_FSLH  ,  &kp DE_BSLH   &kp DE_RPAR   &kp DE_RBRC   &kp DE_RBKT   &kp DE_GT    ,
// //╭─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮
//    &studio_unlock ___          ___           ___           &kp DE_ACUTE  ___          ,  ___           &kp DE_PIPE   ___           ___           ___           ___          ,
// //╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
//                                              ___           ___           ___          ,  ___           ___           ___
// //                                          ╰─────────────┴─────────────┴─────────────╯ ╰─────────────┴─────────────┴─────────────╯
// )
//
// /* vim: set ft=c tw=174: */


//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include "zmk-helpers/helper.h"
#include "zmk-helpers/key-labels/totem.h"

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4 LB5 // Left-hand keys.
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4 RB5 // Right-hand keys.
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                      // Thumb keys.

#define Base        0
#define Nav         1
#define Sym         2
#define Fun         3
#define Game        4
#define Misc        5

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

/ {
    behaviors {
        // hm: homerow_mods {
        //     compatible = "zmk,behavior-hold-tap";
        //     label = "HOMEROW_MODS";
        //     #binding-cells = <2>;
        //     flavor = "tap-preferred";
        //     tapping-term-ms = <200>;
        //     quick-tap-ms = <125>;
        //     global-quick-tap;
        //     bindings = <&kp>, <&kp>;
        // };
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
        };
        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        Base {
            display-name = "Base";
            bindings = <
              &kp Q       &kp W       &kp E          &kp R         &kp T           &kp Y          &kp U         &kp I        &kp O       &kp P
              &hml LALT A &hml RALT S &hml LGUI D    &hml LCTRL F  &kp G           &kp H          &hmr RCTRL J  &hmr RGUI K  &hmr RALT L &hmr LALT SEMICOLON
&lt 3 ESCAPE  &kp Z       &kp X       &kp C          &kp V         &kp B           &kp N          &kp M         &kp COMMA    &kp DOT     &kp SLASH           &kp APOSTROPHE
                                      &kp TAB        &lt 1 BSPC    &kp SPACE       &mt RSHFT RET  &lt 2 LBRC    &kp MINUS
            >;
        };

        Nav {
            display-name = "Nav";
            bindings = <
              &trans    &trans      &kp UP_ARROW    &trans      &trans          &trans  &kp N7  &kp N8  &kp N9  &trans
              &trans    &kp LEFT    &kp DOWN        &kp RIGHT   &trans          &trans  &kp N4  &kp N5  &kp N6  &trans
       &trans &trans    &trans      &trans          &trans      &trans          &kp N0  &kp N1  &kp N2  &kp N3  &trans  &trans
                                    &trans          &trans      &trans          &trans  &trans  &trans
            >;
        };

        Sym {
            display-name = "Sym";
            bindings = <
                &kp GRAVE   &kp LS(GRAVE)   &trans      &kp BSLH    &kp LS(N1)          &kp LS(MINUS)   &kp RA(RBRC)    &kp LS(RBRC)    &trans      &trans
                &kp NUBS    &kp RA(N8)      &kp RA(N7)  &kp LS(N8)  &kp LS(N7)          &kp RA(MINUS)   &kp LS(N9)      &kp RA(N0)      &kp RA(N8)  &kp LS(NUBS)
&studio_unlock  &trans      &trans          &trans      &kp EQL     &trans              &trans          &kp RA(NUBS)    &trans          &trans      &trans          &trans
                                            &trans      &trans      &trans              &trans          &trans          &trans
            >;
        };
        Fun {
            display-name = "Fun";
            bindings = <
        &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans          &trans  &trans  &trans
            >;
        };

        Gaming {
            display-name = "Game";
            bindings = <
        &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans          &trans  &trans  &trans
            >;
        };

        Misc {
            display-name = "Misc";
            bindings = <
        &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans          &trans  &trans  &trans
            >;
        };

//         Fun {
//             display-name = "Fun";
//             bindings = <
//         &bootloader  &trans  &trans  &trans  &to 4     &trans  &trans  &trans  &kp END  &kp F1
//         &trans       &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans   &kp F10
// &trans  &trans       &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans   &kp F20  &kp F7
//                              &trans  &trans  &trans    &trans  &trans  &trans
//             >;
//         };
//
//         Gaming {
//             display-name = "Game";
//             bindings = <
//             &kp Z           &kp X  &kp C      &kp V         &sl 5     &trans  &trans  &trans  &trans  &trans
//             &kp TAB         &kp Q  &kp W      &kp E         &kp R     &trans  &trans  &trans  &trans  &trans
// &kp ESCAPE  &kp LEFT_SHIFT  &kp A  &kp S      &kp D         &kp F     &trans  &trans  &trans  &trans  &trans  &trans
//                                    &kp LCTRL  &kp LEFT_ALT  &trans    &trans  &trans  &trans
//             >;
//         };
//
//         Gaming+ {
//             display-name = "Game+";
//             bindings = <
//         &kp F10  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp T     &kp RA(RC(Y))  &kp RA(RC(U))  &trans  &trans  &kp LC(RA(DEL))
//         &kp L    &kp O         &kp Y         &kp K         &kp G     &kp F5         &kp F7         &trans  &trans  &kp F12
// &trans  &to 0    &trans        &trans        &trans        &trans    &trans         &trans         &trans  &trans  &kp F22          &kp LA(F4)
//                                &kp J         &kp I         &kp M     &trans         &trans         &trans
//             >;
//         };
    };
};

